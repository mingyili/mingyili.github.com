.scrollable(){
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}
.flexbox() {
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
.flex-wrap(@fw) when (@fw = nowrap) {
    -webkit-box-lines: single;
    -moz-box-lines: single;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: none;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
}
.flex-wrap(@fw) when (@fw = wrap) {
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}
.flex-wrap(@fw) when not (@fw = wrap) and not (@fw = nowrap) {
    -webkit-flex-wrap: @fw;
    -ms-flex-wrap: @fw;
    flex-wrap: @fw;
}
.flex-shrink(@fs) {
    -webkit-flex-shrink: @fs;
    -ms-flex: 0 @fs auto;
    flex-shrink: @fs;
}
.justify-content(@jc) when (@jc = flex-start) {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
}
.justify-content(@jc) when (@jc = flex-end) {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
}
.justify-content(@jc) when (@jc = space-between) {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
}
.justify-content(@jc) when not (@jc = flex-start) and not (@jc = flex-end) and not (@jc = space-between) {
    -webkit-box-pack: @jc;
    -ms-flex-pack: @jc;
    -webkit-justify-content: @jc;
    justify-content: @jc;
}
.align-items(@ai) when (@ai = flex-start) {
    -webkit-box-align: start;
    -ms-flex-align: start;
    -webkit-align-items: flex-start;
    align-items: flex-start;
}
.align-items(@ai) when (@ai = flex-end) {
    -webkit-box-align: end;
    -ms-flex-align: end;
    -webkit-align-items: flex-end;
    align-items: flex-end;
}
.align-items(@ai) when not (@ai = flex-start) and not (@ai = flex-end) {
    -webkit-box-align: @ai;
    -ms-flex-align: @ai;
    -webkit-align-items: @ai;
    align-items: @ai;
}
.align-content(@ai) {
    -ms-flex-line-pack: @ai;
    -webkit-align-content: @ai;
    align-content: @ai;
}
.align-self(@as) {
    -ms-flex-item-align: @as;
    -webkit-align-self: @as;
    align-self: @as;
}
.clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Encoded SVG Background
.encoded-svg-background(@svg) {
    @url: `encodeURIComponent(@{svg})`;
    background-image: url("data:image/svg+xml;charset=utf-8,@{url}");
}

// Preserve3D
.preserve3d() {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

//from ratchet
.linear-gradient(@color-from, @color-to) {
  background-color: @color-from; // Old browsers
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@color-from), color-stop(100%,@color-to)); // Chrome, Safari4+
  background-image: -webkit-linear-gradient(top, @color-from 0%, @color-to 100%);           // Chrome10+, Safari5.1+
  background-image:    -moz-linear-gradient(top, @color-from 0%, @color-to 100%);           // FF3.6+
  background-image:     -ms-linear-gradient(top, @color-from 0%, @color-to 100%);           // IE10+
  background-image:      -o-linear-gradient(top, @color-from 0%, @color-to 100%);           // Opera 11.10+
  background-image:         linear-gradient(to bottom, @color-from 0%, @color-to 100%);     // W3C
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{@color-from}', endColorstr='#{@color-to}', GradientType=0 ); // IE6-9
}
.directional-gradient(@color-from, @color-to, @deg: 45deg) {
  background-color: @color-from; // Old browsers
  background-image: -webkit-gradient(linear, left bottom, right top, color-stop(0%,@color-from), color-stop(100%,@color-to)); // Chrome, Safari4+
  background-image: -webkit-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // Chrome10+, Safari5.1+
  background-image:    -moz-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // FF3.6+
  background-image:     -ms-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // IE10+
  background-image:      -o-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // Opera 11.10+
  background-image:         linear-gradient(@deg, @color-from 0%, @color-to 100%);     // W3C
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{@color-from}', endColorstr='#{@color-to}', GradientType=1 ); // IE6-9
}

.hairline(@position, @color) when (@position = top) {
    border-top-width: 1px;
    background-repeat: repeat-x;
    -webkit-background-size: 100% 1px;
    background-position: left top; 
    .hairline-color(@position, @color);
}
.hairline(@position, @color) when (@position = left) {
    border-left-width: 1px;
    background-repeat: repeat-y;
    -webkit-background-size: 1px 100%;
    background-position: left top; 
    .hairline-color(@position, @color);
}
.hairline(@position, @color) when (@position = bottom) {
    border-bottom-width: 1px;
    background-repeat: repeat-x;
    -webkit-background-size: 100% 1px;
    background-position: left bottom;
    .hairline-color(@position, @color);
}
.hairline(@position, @color) when (@position = right) {
    border-right-width: 1px;
    background-position: right top;
    background-repeat: repeat-y;
    -webkit-background-size: 1px 100%;
    .hairline-color(@position, @color);
}
// For right and bottom
.hairline-remove(@position) when (@position = top){
    border-top: 0;
    background-image: none;
}
.hairline-remove(@position) when (@position = left){
    border-left: 0;
    background-image: none;
}
.hairline-remove(@position) when (@position = bottom){
    border-bottom: 0;
    background-image: none;
}
.hairline-remove(@position) when (@position = right){
    border-right: 0;
    background-image: none;
}

// For right and bottom
.hairline-color(@position, @color) when (@position = top){
    border-top-color: @color!important;
    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, @color), to(@color));
}
.hairline-color(@position, @color) when (@position = left){
    border-left-color: @color!important;
    background-image: -webkit-gradient(linear, right top, left top, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, @color), to(@color));//border-left
}
.hairline-color(@position, @color) when (@position = bottom){
    border-bottom-color: @color!important;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, @color), to(@color));//border-bottom
}
.hairline-color(@position, @color) when (@position = right){
    border-right-color: @color!important;
    background-image: -webkit-gradient(linear, left top, right top, color-stop(.5, rgba(0, 0, 0, 0)), color-stop(.5, @color), to(@color));//border-right
}


.hairline(@type, @color, @offset) when (@type = single) {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>");
    background-position: @offset 100%;
}
.hairline(@type, @color, @offset) when (@type = double) {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>"),
                      url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>");
    background-position: @offset 100%, @offset 0;
    background-repeat: no-repeat;
}

//icon
.icon(){
    font-family:"icomoon" !important;
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
}